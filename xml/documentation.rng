<?xml version="1.0" encoding="utf-8"?>
<!--
 ! XML Documentation for Python, C, C++, and Java projects.
 !-->
<grammar
 xmlns="http://relaxng.org/ns/structure/1.0"
 ns="https://fault.io/xml/documentation"
 datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
 xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">

 <start>
  <ref name="factor"/>
 </start>

 <define name="factor">
  <choice>
   <element name="factor">
    <attribute name="domain">
     <value>python</value>
    </attribute>

    <ref name="python.module"/>
   </element>
  </choice>
 </define>

 <define name="xml.space">
  <attribute name="xml:space">
   <choice>
    <value>default</value>
    <value>preserve</value>
   </choice>
  </attribute>
 </define>

 <define name="hash">
  <element name="hash">
   <attribute name="format"><value>hex</value></attribute>
   <attribute name="type"><value>sha512</value></attribute>
   <text/>
  </element>
 </define>

 <define name="source.file">
  <a:documentation>The source of the module being described.</a:documentation>
  <element name="source">
   <attribute name="path">
    <data type="string"/>
   </attribute>
   <ref name="hash"/>
  </element>
 </define>

 <define name="source.lines">
  <a:documentation>The source of the module being described.</a:documentation>
  <element name="source">
   <attribute name="unit">
    <choice>
     <value>line</value>
     <value>octet</value>
    </choice>
   </attribute>
   <attribute name="start">
    <data type="integer"/>
   </attribute>
   <attribute name="stop">
    <data type="integer"/>
   </attribute>
  </element>
 </define>

 <define name="na">
  <a:documentation>Name attribute used on most elements.</a:documentation>
  <attribute name="identifier">
   <data type="normalizedString"/>
  </attribute>
  <optional>
   <attribute name="xml:id">
    <data type="ID"/>
   </attribute>
  </optional>
 </define>

 <define name="doc">
  <a:documentation>The contents of a Python object's `__doc__` attribute</a:documentation>
  <optional>
   <element name="doc">
     <ref name="xml.space"/>
    <text/>
   </element>
  </optional>
 </define>

 <define name="submodule">
  <a:documentation>Local index of modules contained in package.</a:documentation>
  <element name="submodule">
   <attribute name="type">
    <choice>
     <value>package</value>
     <value>module</value>
    </choice>
   </attribute>
   <attribute name="identifier"><data type="normalizedString"/></attribute>
  </element>
 </define>

 <define name="python.module">
  <element name="module">
   <ref name="na"/>

   <zeroOrMore>
    <ref name="source.file"/>
   </zeroOrMore>

   <ref name="doc"/>

   <zeroOrMore>
    <ref name="submodule"/>
   </zeroOrMore>

   <zeroOrMore>
    <choice>
     <ref name="import"/>
     <ref name="class"/>
     <ref name="function"/>
     <ref name="data"/>
     <ref name="python.alias"/>
    </choice>
   </zeroOrMore>
  </element>
 </define>

 <define name="pypi">
  <element name="pypi">
   <a:documentation>
    Element describing a site-packages dependency of a referenced object.
   </a:documentation>

   <attribute name="xml:id">
    <data type="ID"/>
   </attribute>

   <attribute name="name">
    <data type="normalizedString"/>
   </attribute>

   <attribute name="version">
    <data type="normalizedString"/>
   </attribute>

   <attribute name="name">
    <data type="normalizedString"/>
   </attribute>
  </element>
 </define>

 <define name="item">
  <element name="item">
   <a:documentation>
    Former is the key and the latter is the value for a dictionary "item".
   </a:documentation>
   <ref name="python.object"/>
   <ref name="python.object"/>
  </element>
 </define>

 <define name="python.tuple">
  <element name="tuple">
   <zeroOrMore>
    <ref name="python.object"/>
   </zeroOrMore>
  </element>
 </define>

 <define name="python.object">
  <a:documentation>
   XML Serialization of built-in Python objects and support for arbitrary objects.
  </a:documentation>

  <choice>
   <element name="integer">
    <data type="normalizedString"/>
   </element>

   <element name="real">
    <data type="normalizedString"/>
   </element>

   <element name="string">
    <ref name="xml.space"/>
    <data type="string"/>
   </element>

   <element name="bytes">
    <ref name="xml.space"/>
    <data type="string"/>
   </element>

   <!-- composites -->
   <element name="set">
    <zeroOrMore>
     <ref name="python.object"/>
    </zeroOrMore>
   </element>

   <ref name="python.tuple"/>

   <element name="list">
    <zeroOrMore>
     <ref name="python.object"/>
    </zeroOrMore>
   </element>

   <element name="dictionary">
    <zeroOrMore>
     <ref name="item"/>
    </zeroOrMore>
   </element>

   <element name="none"><empty/></element>
   <element name="true"><empty/></element>
   <element name="false"><empty/></element>

   <element name="namedtuple">
    <ref name="python.type"/>
    <zeroOrMore>
     <element name="field"><data type="normalizedString"/></element>
    </zeroOrMore>
    <ref name="python.tuple"/>
   </element>

   <element name="object">
    <a:documentation>
     An object whose type is not one of the supported builtins.
    </a:documentation>
    <text/>
   </element>
  </choice>
 </define>

 <define name="annotation">
  <a:documentation>
   The object annotating the argument.
  </a:documentation>
  <optional>
   <element name="annotation">
    <ref name="python.object"/>
   </element>
  </optional>
 </define>

 <define name="default">
  <optional>
   <element name="default">
    <ref name="python.object"/>
   </element>
  </optional>
 </define>

 <define name="python.alias">
  <element name="alias">
   <ref name="na"/>
   <attribute name="address">
    <data type="normalizedString"/>
   </attribute>
   <optional>
    <attribute name="adjacent"> 
     <data type="IDREF"/>
    </attribute>
   </optional>
  </element>
 </define>

 <define name="python.call.signature">
  <element name="signature">
   <optional>
    <attribute name="varargs"><data type="normalizedString"/></attribute>
   </optional>
   <optional>
    <attribute name="varkw"><data type="normalizedString"/></attribute>
   </optional>
   <zeroOrMore>
    <element name="positional">
     <attribute name="name">
      <data type="string"/>
     </attribute>
     <attribute name="index">
      <data type="integer"/>
     </attribute>
     <optional><ref name="annotation"/></optional>
     <optional><ref name="default"/></optional>
    </element>
   </zeroOrMore>
   <zeroOrMore>
    <element name="keyword">
     <attribute name="name">
      <data type="string"/>
     </attribute>
     <optional><ref name="annotation"/></optional>
     <optional><ref name="default"/></optional>
    </element>
   </zeroOrMore>
  </element>
 </define>

 <define name="import">
  <element name="import">
   <a:documentation>
    Reference to an imported module.
   </a:documentation>
   <ref name="na"/>
   <attribute name="name">
    <data type="normalizedString"/>
   </attribute>
  </element>
 </define>

 <define name="python.type">
  <element name="type">
   <attribute name="name">
    <data type="normalizedString"/>
   </attribute>
   <attribute name="module">
    <data type="normalizedString"/>
   </attribute>
   <attribute name="path">
    <data type="normalizedString"/>
   </attribute>
  </element>
 </define>

 <define name="class">
  <element name="class">
   <ref name="na"/>
   <optional>
    <ref name="source.lines"/>
   </optional>
   <ref name="doc"/>

   <element name="bases">
    <oneOrMore>
     <ref name="python.type"/>
    </oneOrMore>
   </element>

   <element name="order">
    <oneOrMore>
     <ref name="python.type"/>
    </oneOrMore>
   </element>

   <zeroOrMore>
    <choice>
     <ref name="import"/>
     <ref name="method"/>
     <ref name="property"/>
     <ref name="data"/>
     <ref name="python.alias"/>
    </choice>
   </zeroOrMore>
  </element>
 </define>

 <define name="method">
  <element name="method">
   <ref name="na"/>
   <optional>
    <attribute name="type">
     <choice>
      <value>static</value>
      <value>class</value>
     </choice>
    </attribute>
   </optional>
   <optional>
    <ref name="source.lines"/>
   </optional>
   <ref name="doc"/>
   <ref name="python.call.signature"/>
  </element>
 </define>

 <define name="function">
  <element name="function">
   <ref name="na"/>
   <optional>
    <ref name="source.lines"/>
   </optional>
   <ref name="doc"/>
   <ref name="python.call.signature"/>
  </element>
 </define>

 <define name="property">
  <element name="property">
   <ref name="na"/>
   <ref name="doc"/>
  </element>
 </define>

 <define name="data">
  <element name="data">
   <ref name="na"/>
   <ref name="python.object"/>
  </element>
 </define>
</grammar>
<!--
 ! vim: et:ts=1:sw=1:
 !-->
